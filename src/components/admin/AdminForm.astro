---
interface Props {
    fields: {
        name: string;
        label: string;
        type: "text" | "number" | "url" | "textarea" | "select";
        width: "half" | "full";
        options?: { value: string; label: string }[];
    }[];
    info: {
        name: string;
        label: string;
        type: "text" | "date";
    }[];
    blog: {
        [key: string]: string;
    };
}

const {} = Astro.props;
---

<div class="flex items-start gap-6">
    <div class="flex-[2] space-y-6">
        <div class="grid grid-cols-2 gap-x-6 gap-y-4">
            {
                fields.map((field) => (
                    <div
                        class={cn(
                            "space-y-1",
                            field.width === "half" ? "col-span-1" : "col-span-2"
                        )}
                    >
                        <label for={field.name} class="leading-none">
                            {field.label}
                        </label>
                        {field.type === "text" && (
                            <input
                                type="text"
                                id={field.name}
                                name={field.name}
                                value={blog[field.name]}
                                class="w-full rounded border-none bg-clr-background px-3 py-2 leading-snug focus:ring-0 focus-visible:ring-2"
                            />
                        )}
                        {field.type === "number" && (
                            <input
                                type="number"
                                id={field.name}
                                name={field.name}
                                value={blog[field.name]}
                                class="w-full rounded border-none bg-clr-background px-3 py-2 leading-snug focus:ring-0 focus-visible:ring-2"
                            />
                        )}
                        {field.type === "url" && (
                            <input
                                type="url"
                                id={field.name}
                                name={field.name}
                                value={blog[field.name]}
                                class="w-full rounded border-none bg-clr-background px-3 py-2 leading-snug focus:ring-0 focus-visible:ring-2"
                            />
                        )}
                        {field.type === "textarea" && (
                            <textarea
                                id={field.name}
                                name={field.name}
                                rows={4}
                                class="w-full rounded border-none bg-clr-background px-3 py-2 leading-snug focus:ring-0 focus-visible:ring-2"
                            >
                                {blog[field.name]}
                            </textarea>
                        )}
                        {field.type === "select" && (
                            <select
                                id={field.name}
                                name={field.name}
                                value={blog[field.name]}
                                class="w-full rounded border-none bg-clr-background px-3 py-2 leading-snug focus:ring-0 focus-visible:ring-2"
                            >
                                {field.options?.map((option) => (
                                    <option
                                        value={option.value}
                                        selected={
                                            blog[field.name] === option.value
                                        }
                                    >
                                        {option.label}
                                    </option>
                                ))}
                            </select>
                        )}
                    </div>
                ))
            }
        </div>
    </div>
    <div class="flex-1 space-y-6">
        <img
            class="w-full overflow-hidden border border-clr-border bg-clr-background"
            src={blog.image}
            alt={blog.author}
        />
        <div class="space-y-2">
            {
                info.map((field) => (
                    <div class="grid grid-cols-2 gap-4 leading-snug">
                        <div class="">{field.label}</div>
                        <div class="">
                            {blog[field.name]
                                ? field.type === "date"
                                    ? toNiceDate(blog[field.name] as string)
                                    : blog[field.name]
                                : ""}
                        </div>
                    </div>
                ))
            }
        </div>
    </div>
</div>
